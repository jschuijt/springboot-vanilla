<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   					   http://www.springframework.org/schema/beans/spring-beans.xsd
	   					   http://www.springframework.org/schema/data/jpa 
	   					   http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd
	   					   http://www.springframework.org/schema/tx
	   					   http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	   					   

	<!-- <bean id="dataSource" class="oracle.jdbc.pool.OracleDataSource">
		<property name="dataSourceName" value="ds" />
		<property name="URL" value="${db.url}" />
		<property name="user" value="${db.username}" />
		<property name="password" value="${db.password}" />
	</bean> -->
	
	<!-- <bean id="dataSource" class="org.h2.Driver">
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
	</bean> -->
	
	<!-- Creates the transaction manager bean that integrates the used JPA provider with
	     the Spring transaction mechanism
	-->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
	<!-- Enables annotation driven transaction management -->
	<tx:annotation-driven/>
	
	<!-- Specifies the default settings that are compatible with Hibernate -->
	<bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
	
	<!-- Creates the bean that creates the JPA entity manager factory -->
	
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<!-- <property name="dataSourceName" ref="dataSource" /> -->
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
		<property name="packagesToScan" value="demo.domain" />
		<property name="jpaProperties">
			<props>
				<!-- Configures the used database dialect. This allows Hibernate to create SQL
				that is optimized for the used database -->
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				
				<!-- Specifies the action that is invoked to the database when the Hibernate
				Session factory is created or closed -->
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				
				<!-- Configures the naming strategy that is used when Hibernate creates new database objects
				and schema elements -->
				<prop key="hibernate.ejb.naming_strategy">${hibernate.ejb.naming.strategy}</prop>
				
				<!-- If true, Hibernate writes all SQL statements to the console -->
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				
				<!-- If true, Hibernate wil use pretty print when it writes SQL to the console -->
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				
				<prop key="hibernate.connection.url">${hibernate.connection.url}</prop>
				
				<prop key="hibernate.connection.username">${hibernate.connection.username}</prop>
				
			</props>
		</property>
	</bean>
	
	
	<!-- Create proxy instances of our repository interfaces -->
	<jpa:repositories base-package="demo.repositories"></jpa:repositories>   					   
	   					   
</beans>	   					   